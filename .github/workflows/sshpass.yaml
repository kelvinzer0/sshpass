name: Build and release sshpass
on:
  push:
    branches:
    - master
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        arch: [386, amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Linux Automake
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install autotools-dev automake wget gcc curl
      - name: Set up Cygwin
        if: matrix.os == 'windows-latest'
        uses: egor-tensin/setup-cygwin@v4
        with:
          packages: flexdll cmake gcc-g++ make git gcc-core cygport binutils automake autoconf curl zip
          
    
      
      
      - name: Release windows-386
        if: matrix.os == 'windows-latest' && matrix.arch == '386'
        env:
          MY_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          git clone https://github.com/Edgar0119/cygwin-sshpass.git cygwin-sshpass
          cd cygwin-sshpass
          tar -zxvf sshpass-1.05.tar.gz
          cd sshpass-1.05
          bash ./configure
          make

          C:\tools\cygwin\bin\bash.exe -e -l -c "curl -H 'Authorization: token $env:MY_TOKEN' -H 'Content-Type: application/octet-stream' -X POST https://uploads.github.com/repos/kelvinzer0/sshpass/releases/89830042/assets?name=sshpass-windows-386.exe --data-binary @/cygdrive/d/a/sshpass/sshpass/cygwin-sshpass/sshpass.exe"
    
          
      - name: Release windows-amd64
        if: matrix.os == 'windows-latest' && matrix.arch == 'amd64'
        env:
          MY_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          git clone https://github.com/Edgar0119/cygwin-sshpass.git cygwin-sshpass
          cd cygwin-sshpass
          tar -zxvf sshpass-1.05.tar.gz
          cd sshpass-1.05
          bash ./configure
          make
         
      
          C:\tools\cygwin\bin\bash.exe -e -l -c "curl -H 'Authorization: token $env:MY_TOKEN' -H 'Content-Type: application/octet-stream' -X POST https://uploads.github.com/repos/kelvinzer0/sshpass/releases/89830042/assets?name=sshpass-windows-amd64.exe --data-binary @/cygdrive/d/a/sshpass/sshpass/cygwin-sshpass/sshpass.exe"
    
      - name: Release linux-386
        if: matrix.os == 'ubuntu-latest' && matrix.arch == '386'
        env:
          MY_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          git clone https://github.com/kevinburke/sshpass
          cd sshpass
          ./configure --disable-debug --disable-dependency-tracking
          make
          mv sshpass sshpass-linux-386
          curl -H "Authorization: token ${MY_TOKEN}" -H "Content-Type: application/octet-stream" -X POST https://uploads.github.com/repos/kelvinzer0/sshpass/releases/89830042/assets?name=sshpass-linux-386 --data-binary @$(pwd)/sshpass-linux-386

      - name: Release linux-amd64
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
        env:
          MY_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          git clone https://github.com/kevinburke/sshpass
          cd sshpass
          ./configure --disable-debug --disable-dependency-tracking
          make
          mv sshpass sshpass-linux-amd64
          curl -H "Authorization: token ${MY_TOKEN}" -H "Content-Type: application/octet-stream" -X POST https://uploads.github.com/repos/kelvinzer0/sshpass/releases/89830042/assets?name=sshpass-linux-amd64 --data-binary @$(pwd)/sshpass-linux-amd64

      - name: Release macos-386
        if: matrix.os == 'macOS-latest' && matrix.arch == '386'
        env:
          MY_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          git clone https://github.com/kevinburke/sshpass
          cd sshpass
          ./configure --disable-debug --disable-dependency-tracking
          make
          mv sshpass sshpass-macos-386
          curl -H "Authorization: token ${MY_TOKEN}" -H "Content-Type: application/octet-stream" -X POST https://uploads.github.com/repos/kelvinzer0/sshpass/releases/89830042/assets?name=sshpass-macos-386 --data-binary @$(pwd)/sshpass-macos-386

      - name: Release macos-amd64
        if: matrix.os == 'macOS-latest' && matrix.arch == 'amd64'
        env:
          MY_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          git clone https://github.com/kevinburke/sshpass
          cd sshpass
          ./configure --disable-debug --disable-dependency-tracking
          make
          mv sshpass sshpass-macos-amd64
          curl -H "Authorization: token ${MY_TOKEN}" -H "Content-Type: application/octet-stream" -X POST https://uploads.github.com/repos/kelvinzer0/sshpass/releases/89830042/assets?name=sshpass-macos-amd64 --data-binary @$(pwd)/sshpass-macos-amd64


  

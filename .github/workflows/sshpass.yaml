name: Build and release sshpass
on:
  push:
    branches:
    - master
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        arch: [386, amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Linux Automake
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install autotools-dev automake wget gcc

      - name: Install dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install cygwin
          cygwin-setup -q -P wget,make,gcc
          cd C:\
      - name: Build sshpass
        run: |
          git clone https://github.com/kevinburke/sshpass
          cd sshpass
          ./configure --disable-debug --disable-dependency-tracking
          make
      - name: Rename
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            if [ "${{ matrix.arch }}" == "386" ]; then
              ren sshpass.exe sshpass-windows-386.exe 
            fi
            if [ "${{ matrix.arch }}" == "amd64" ]; then
              ren sshpass.exe sshpass-windows-amd64.exe
            fi
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            if [ "${{ matrix.arch }}" == "386" ]; then
              mv sshpass sshpass-linux-386
            fi
            if [ "${{ matrix.arch }}" == "amd64" ]; then
              mv sshpass sshpass-linux-amd64
            fi
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            if [ "${{ matrix.arch }}" == "386" ]; then
              mv sshpass sshpass-darwin-386
            fi
            if [ "${{ matrix.arch }}" == "amd64" ]; then
               mv sshpass sshpass-darwin-amd64
            fi
          fi
      - name: Publish Release windows-386
        if: matrix.os == 'windows-latest' && matrix.arch == '386'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: C:\sshpass\sshpass-windows-386.exe 
      - name: Publish Release windows-amd64
        if: matrix.os == 'windows-latest' && matrix.arch == 'amd64'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: C:\sshpass\sshpass-windows-amd64.exe 
      - name: Publish Release linux-386 && matrix.arch == '386'
        if: matrix.os == 'linux-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: sshpass-linux-386
      - name: Publish Release linux-amd64
        if: matrix.os == 'linux-latest' && matrix.arch == 'amd64'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: sshpass-linux-amd64
      - name: Publish Release macos-386 
        if: matrix.os == 'macos-latest' && matrix.arch == '386'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: sshpass-darwin-386
      - name: Publish Release macos-amd64
        if: matrix.os == 'macos-latest' && matrix.arch == 'amd64'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: sshpass-darwin-amd64
